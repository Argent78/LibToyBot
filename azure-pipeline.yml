
name: $(Version.Major).$(Version.Minor)$(rev:.r)

trigger:
- master
- develop

variables:
  Version: $(Build.BuildNumber)-preview
  BuildConfiguration: Release

pool:
  name: Hosted Windows 2019 with VS2019

steps:

- task: DotNetCoreCLI@2
  displayName: Restore
  inputs:
    command: 'restore'
    projects: '**/*.csproj'
    restoreDirectory: '$(Pipeline.Workspace)\nuget'


- task: DotNetCoreCLI@2
  displayName: Test
  inputs:
    command: test
    projects: 'src/LibToyBot.Test/LibToyBot.Test.csproj'
    arguments: '--configuration $(BuildConfiguration)'
  enabled: true

- task: DotNetCoreCLI@2
  condition: and(succeeded(), eq(variables['Build.SourceBranchName'], 'master'))
  displayName: Pack 
  inputs:
    command: pack    
    packagesToPack: '**/LibToyBot.csproj'
    versioningScheme: byBuildNumber    
    arguments: '--configuration $(BuildConfiguration)'

- task: DotNetCoreCLI@2
  condition: and(succeeded(), ne(variables['Build.SourceBranchName'], 'master'))
  displayName: Pack (Preview)  
  inputs:
    command: pack    
    packagesToPack: '**/LibToyBot.csproj'
    versioningScheme: byEnvVar
    versionEnvVar: Version     
    arguments: '--configuration $(BuildConfiguration)'

- task: DotNetCoreCLI@2  
  displayName: 'Push NuGet' 
  condition: and(succeeded(), or( eq(variables['Build.SourceBranchName'], 'develop'), eq(variables['Build.SourceBranchName'], 'master') ), false) #disabled
  inputs:
    command: push    
    publishVstsFeed: '/9549f135-9aeb-42aa-9fe5-b09a7b7c41ea'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)'
  condition: succeeded()
